Нулевая группа:
1) Напишите регулярное выражение, которое будет соответствовать любому числу, выведите эти числа.
2) Напишите регулярное выражение, которое будет соответствовать любому cлову, которое начинается с большой буквы, выведите эти слова.
3) Напишите регулярное выражение, которое будет соответствовать любому cлову, которое состоит из 5 букв, выведите эти слова.
4) Заменить все числа в строке на "число".
5) Извлечь из строки все даты в формате ДД.ММ.ГГГГ.
6) Заменить все пробелы в строке на подчеркивания.
7) Напишите регулярное выражение, которое поможет извлечь из строки все хэштеги.
8) Проверить, содержит ли строка хотя бы один пробел.


Указание множества допустимых символов(в квадратных скобках):
1) Найти названия всех животных из трёх букв(bat, cat, rat) в следующей строке.
2) Шестнадцатеричные числа могут содержать цифры 0-9, а также буквы A-F. При использовании их для указания цветов, шестнадцатеричные коды могут содержать не более трех символов. Создайте регулярное выражение, чтобы найти действительные шестнадцатеричные коды и выведите их позиции в строке.
3) Используя диапазоны символов, создайте регулярное выражение, которое будет выбирать только согласные и выведите их количество строке.
4) Используйте знак отрицания ^ в квадратных скобках, чтобы сопоставить все слова ниже, которые не заканчиваются на y и выведите их в правильном формате.
5) Напишите регулярное выражение, используя диапазон и знак отрицания ^ в квадратных скобках, чтобы найти все года между 1977 и 1982 (включительно) и замените их на 2024, выведите измененную строку.
6) Напишите регулярное выражение, которое будет соответствовать любому слову, содержащему хотя бы одну цифру, выведите эти слова.
7) Напишите регулярное выражение, которое будет соответствовать любому слову, содержащему хотя бы одну букву в верхнем регистре, выведите эти слова.


Escape-последовательности:
1) Есть ли в строке квадратные скобки '[]'.
2) Найдите все вхождения обратного слэша '\' в строке, замените на слэш '/' и выведите измененную строку.
3) Найти все символы табуляции (\t) в строке и выведите их количество.
4) Написать regex для поиска escape-последовательностей(\r, \t, \n) и выведите их позиции.
5) Найдите слова содержащие символ табуляции (\t) внутри слова, а не в начале или конце и выведите их.


Квантификаторы:
1) Найдите все английские слова в строке.
2) Найдите все обозначения размеров файлов в строке ниже. Размеры файлов будут состоять из числа (с десятичной точкой или без нее), за которым следуют KB, MB, GB или TB.
3) Найти фамилии содержащие 4 или более символов и выведите их количество.
4) В некоторых языках программирования (например, Java) за некоторыми целыми числами и числами с плавающей запятой (точкой) могут следовать l / L и f / F, чтобы указать, что они должны рассматриваться как long / float (соответственно), а не как обычные int / double. Найдите все действительные "long" числа в строке ниже и выведите их позиции.
5) Номера страхового индивидуального лицевого счёта(СНИЛС) представляют собой 11-значные номера в формате ХХХ-ХХХ-ХХХ YY, где каждый X, Y может быть любой цифрой [0-9]. Используя один или несколько классов символов, напишите регулярное выражение, чтобы найти правильно отформатированные номера СНИЛС в списке ниже.
6) Предположим, что система проверки надежности пароля на веб-сайте требует, чтобы пароли пользователей составляли от 6 до 12 символов, а также не содержали пробелов. Каждый пароль содержится в скобках () для удобства сопоставления. Напишите регулярное выражение, помечающее неверные пароли в строке ниже.
7) Напишите регулярное выражение, которое будет соответствовать любому числу, содержащему от 3 до 7 цифр, выведите эти числа.
8) С помощью регулярного выражения замените все последовательности из 3 или более пробелов на один пробел.
9) Напишите регулярное выражение, которое будет соответствовать строке, содержащей от 1 до 3 символов подчёркивания.


Использование групп:
1) Поместить в первую группу слова, начинающиеся с заглавной буквы, а во вторую со строчной и вывести их количество в строке.
2) Входная строка содержит в себе сотовый телефон в формате +7XXXXXXXXXX и Имя. Нужно выделить из строки все сгруппированные контакты с тегами <tel> - номер телефона, <name> - Имя и вывести их в правильном формате.
3) Заменить все слова, которые содержат 2 или более одинаковых букв подряд, на "слово".


Команды нулевой длины:
1) Найдите число, которое находится в начале строки.
2) Найдите число, которое находится в конце строки.
3) Найти первое и последнее слово в строке.
4) Предположим, мы пишем подсветку синтаксиса и хотим выделить слово var, но только тогда, когда оно появляется само по себе (не касаясь других символов слова). Найдите все такие вхождения слова var в строке и выведите их количество.
5) Напишите регулярное выражение, которое находит все вхождения слова "hello" в тексте, но не находит вхождения, если слово "hello" является частью другого слова (например, "hello" в "hello_world" не должно быть найдено) и выведите их количество в строке.


Сложные задачи(достаточно написать регулярное выражение и вывести все совпадения):
1) Написать регулярное выражение для проверки корректности записи времени в формате ЧЧ:ММ:СС и вывести все совпадения.
2) Написать регулярное выражение для проверки корректности записи MAC-адреса(запись MAC-адреса может быть представлена 3 способами: 1. Большими буквами через тире(6 октетов). Пример: 1C-4F-FD-E1-88-0A; 2. Маленькими буквами через двоеточие(6 октетов). Пример: 1c:4f:fd:e1:88:0a; 3. Маленькими буквами через точки(3 октета). Пример: 1c4f.fde1.880a). Выведите все совпадения.
3) Написать регулярное выражение для проверки корректности записи даты рождения в формате ДД.ММ.ГГГГ или ДД/ММ/ГГГГ и вывести все совпадения.
4) Написать регулярное выражение для проверки корректности записи номера автомобиля в формате xYYYxx, где x – буква, y – цифра и вывести все совпадения.
5) Написать регулярное выражение для проверки корректности записи адреса электронной почты и вывести все совпадения.
6) Извлечь из текста все числа, которые написаны словами.
7) Извлечь из текста все фразы, которые начинаются с "А" и заканчиваются точкой.
8) Извлечь из текста все даты, написанные словами (например, "сегодня", "завтра", "15 февраля", "12 марта 2023 года").
9) Извлечь из текста все HTML-теги, включая атрибуты и значения атрибутов.
10) Проверить, является ли строка валидным IP-адресом.
